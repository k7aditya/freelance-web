name: CI — test & build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Run tests (if any)
        id: run-tests
        env:
          NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}
          CLERK_SECRET_KEY: ${{ secrets.CLERK_SECRET_KEY }}
          MONGODB_CHAT: ${{ secrets.MONGODB_CHAT }}
          MONGO_DB: ${{ secrets.MONGO_DB }}
        run: |
          # enable recursive globbing and allow zero matches without error
          shopt -s globstar nullglob
          # find test files with common patterns used by bun
          test_files=(**/*.{test,spec}.*)
          if [ ${#test_files[@]} -gt 0 ]; then
            echo "Found ${#test_files[@]} test file(s). Running bun test..."
            bun test
          else
            echo "No tests found — skipping bun test."
          fi

      - name: Build production bundle
        run: bun build

      - name: Package build artifact (if produced)
        id: package
        run: |
          # set output `found` = true if build output exists
          if [ -d .vercel/output ]; then
            echo "Packaging .vercel/output..."
            tar -czf build.tar.gz .vercel/output
            echo "found=true" >> $GITHUB_OUTPUT
          else
            echo ".vercel/output not found — skipping packaging."
            echo "found=false" >> $GITHUB_OUTPUT
          fi

      - name: Upload build artifact
        if: steps.package.outputs.found == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: freelance-web-build
          path: build.tar.gz
